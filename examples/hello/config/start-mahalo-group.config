/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Configuration file for starting non-secure Mahalo */

import org.apache.river.config.ConfigUtil;
import org.apache.river.start.NonActivatableServiceDescriptor;
import org.apache.river.start.ServiceDescriptor;

org.apache.river.start {

    private static codebase =
	ConfigUtil.concat(
	    new Object[] { 
		"http://", ConfigUtil.getHostName(), ":8080/mahalo-dl.jar",
		" ",
                "http://", ConfigUtil.getHostName(), ":8080/jsk-dl.jar" } );

    private static policy = "config${/}mahalo.policy";
    private static classpath = "..${/}..${/}lib${/}mahalo.jar";
    private static config = "config${/}jrmp-mahalo-group.config";

    static serviceDescriptors = new ServiceDescriptor[] {
	new NonActivatableServiceDescriptor(
	    codebase, policy, classpath,
	    "org.apache.river.mahalo.TransientMahaloImpl",
	    new String[] { config })
    };

}//end org.apache.river.start 
