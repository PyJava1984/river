/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

grant codebase "file:${com.sun.jini.jsk.home}${/}lib${/}reggie.jar" {
    permission java.security.AllPermission "", "";
};

grant codebase "file:${com.sun.jini.jsk.home}${/}lib${/}jsk-platform.jar" {
    permission java.security.AllPermission "", "";
};

grant codebase "file:${com.sun.jini.jsk.home}${/}lib${/}jsk-lib.jar" {
    permission java.security.AllPermission "", "";
};

grant principal javax.security.auth.x500.X500Principal "CN=Fiddler"
{
      permission net.jini.security.AccessPermission "*";
};

grant principal javax.security.auth.x500.X500Principal "CN=fiddler"
{
      permission net.jini.security.AccessPermission "multicastRequest";
};

grant principal javax.security.auth.x500.X500Principal "CN=Mahalo"
{
      permission net.jini.security.AccessPermission "*";
};

grant principal javax.security.auth.x500.X500Principal "CN=mahalo"
{
      permission net.jini.security.AccessPermission "multicastRequest";
};

grant principal javax.security.auth.x500.X500Principal "CN=Mercury"
{
      permission net.jini.security.AccessPermission "*";
};

grant principal javax.security.auth.x500.X500Principal "CN=mercury"
{
      permission net.jini.security.AccessPermission "multicastRequest";

};

grant principal javax.security.auth.x500.X500Principal "CN=Outrigger"
{
      permission net.jini.security.AccessPermission "*";
};

grant principal javax.security.auth.x500.X500Principal "CN=outrigger"
{
      permission net.jini.security.AccessPermission "multicastRequest";

};

grant principal javax.security.auth.x500.X500Principal "CN=Norm"
{
      permission net.jini.security.AccessPermission "*";
};

grant principal javax.security.auth.x500.X500Principal "CN=norm"
{
      permission net.jini.security.AccessPermission "multicastRequest";

};

grant principal javax.security.auth.x500.X500Principal "CN=Reggie"
{
      permission net.jini.security.AccessPermission "*";
};

grant principal javax.security.auth.x500.X500Principal "CN=reggie"
{
      permission net.jini.security.AccessPermission "multicastRequest";

};

grant principal javax.security.auth.x500.X500Principal "CN=Tester"
{
      permission net.jini.security.AccessPermission "*";
};

grant principal javax.security.auth.x500.X500Principal "CN=tester"
{
      permission net.jini.security.AccessPermission "multicastRequest";
};

//Kerberos Principals
grant principal javax.security.auth.kerberos.KerberosPrincipal "${fiddler}"
{
      permission net.jini.security.AccessPermission "*";
};

grant principal javax.security.auth.kerberos.KerberosPrincipal "${mahalo}"
{
      permission net.jini.security.AccessPermission "*";
};

grant principal javax.security.auth.kerberos.KerberosPrincipal "${mercury}"
{
      permission net.jini.security.AccessPermission "*";
};

grant principal javax.security.auth.kerberos.KerberosPrincipal "${outrigger}"
{
      permission net.jini.security.AccessPermission "*";
};

grant principal javax.security.auth.kerberos.KerberosPrincipal "${reggie}"
{
      permission net.jini.security.AccessPermission "*";
};

grant principal javax.security.auth.kerberos.KerberosPrincipal "${norm}"
{
      permission net.jini.security.AccessPermission "*";
};

grant principal javax.security.auth.kerberos.KerberosPrincipal "${group}"
{
      permission net.jini.security.AccessPermission "*";
};

grant principal javax.security.auth.kerberos.KerberosPrincipal "${test}"
{
      permission net.jini.security.AccessPermission "*";
};

// this grant is a workaround needed because the MergedPolicyProvider
// is not visible to services started with the service starter
grant codebase "file:${com.sun.jini.test.home}${/}lib${/}qa1-lookup-simulator.jar" {
    permission java.security.AllPermission "", "";
};
