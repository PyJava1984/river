/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

grant codebase "file:${com.sun.jini.test.home}${/}lib${/}fullloggingfilter.jar" {
	permission com.sun.jini.start.SharedActivationPolicyPermission "/-";
	permission com.sun.jini.start.SharedActivationPolicyPermission "\\-";
	permission com.sun.jini.start.SharedActivationPolicyPermission "file:/-";
	permission com.sun.jini.start.SharedActivationPolicyPermission "jar:file:/-";
	permission com.sun.jini.start.SharedActivationPolicyPermission "jar:file:c:/-";
	permission com.sun.jini.start.SharedActivationPolicyPermission "jar:file:c:\\-";
};

grant {
	permission java.io.FilePermission "${com.sun.jini.test.home}${/}lib${/}-", "read";
        permission java.util.PropertyPermission "com.sun.jini.reggie.enableImplToStubReplacement", "read";
};

grant codebase "file:${com.sun.jini.test.home}${/}lib${/}qa1-start-tests.jar" {
    permission java.security.AllPermission "", "";
};

grant codebase "file:${com.sun.jini.test.home}${/}lib${/}qa1-io-marshalledinstance-test.jar" {
    permission java.security.AllPermission "", "";
};

grant codebase "file:${com.sun.jini.test.home}${/}lib${/}qa1-io-marshalinputstream-test.jar" {
    permission java.security.AllPermission "", "";
};

// Grants required for jdk1.6 combined with source=5 and target=jsr14
// I think this has something to do with the new java 6 Policy implementation,
// the visibility of our policy implementations on the boot classpath and
// jdk1.6 compiler optimisations. See River-334
grant codebase "file:${com.sun.jini.jsk.home}${/}lib-ext${/}*" {
    permission java.security.AllPermission "", "";
    //permission java.security.SecurityPermission "getProperty.net.jini.security.policy.PolicyFileProvider.basePolicyClass";
    //permission java.util.PropertyPermission "java.security.policy", "read";
    //permission java.util.PropertyPermission "java.security.policy", "write";
    //permission java.lang.RuntimePermission "accessClassInPackage.sun.security.provider";
    //permission java.lang.RuntimePermission "getProtectionDomain";
    //permission net.jini.security.GrantPermission "java.security.AllPermission \"\", \"\"";
};

// Grants required for jdk1.6 combined with source=5 and target=jsr14
// I think this has something to do with the new java 6 Policy implementation,
// the visibility of our policy implementations on the boot classpath and
// jdk1.6 compiler optimisations. See River-334
grant codebase "file:${com.sun.jini.test.home}${/}lib-ext${/}*" {
    permission java.security.AllPermission "", "";
};


grant codebase "file:${com.sun.jini.qa.harness.testJar}" {
    permission net.jini.security.GrantPermission
        "java.security.AllPermission \"\", \"\"";
};

// grants for various test services, placed here for simplicity, but
// should probably be separated into separate, targeted policy files

// grants needed by mahalo, mercury and simulator - this might be a bit broad

grant codebase "file:${com.sun.jini.test.home}${/}lib${/}qa1-mercury-bogusimpl.jar" {
    permission java.security.AllPermission "", "";
};

grant codebase "file:${com.sun.jini.test.home}${/}lib${/}qa1-lookup-simulator.jar" {
    permission java.security.AllPermission "", "";
};

// grants needed by the activatable and non activatable groups

grant codebase "file:${com.sun.jini.test.home}${/}lib${/}qa1-start-probe.jar" {
    permission com.sun.jini.start.SharedActivationPolicyPermission "jar:file:${com.sun.jini.qa.harness.harnessJar}!/harness/policy/all.policy";
    permission com.sun.jini.start.SharedActivationPolicyPermission "jar:file:${com.sun.jini.qa.harness.harnessJar}!/harness/policy/policy.all";
    permission com.sun.jini.start.SharedActivationPolicyPermission "file:${com.sun.jini.qa.home}${/}harness${/}policy${/}policy.all";
};

grant codebase "file:${com.sun.jini.test.home}${/}lib${/}qa1-start-testservice1.jar" {
    permission com.sun.jini.start.SharedActivationPolicyPermission "jar:file:${com.sun.jini.qa.harness.harnessJar}!/harness/policy/all.policy";
    permission com.sun.jini.start.SharedActivationPolicyPermission "jar:file:${com.sun.jini.qa.harness.harnessJar}!/harness/policy/policy.all";
    permission com.sun.jini.start.SharedActivationPolicyPermission "file:${com.sun.jini.qa.home}${/}harness${/}policy${/}policy.all";
    permission com.sun.jini.start.SharedActivationPolicyPermission "file:${com.sun.jini.qa.home}${/}harness${/}policy${/}all.policy";
};

grant codebase "file:${com.sun.jini.test.home}${/}lib${/}qa1-start-testservice2.jar" {
    permission com.sun.jini.start.SharedActivationPolicyPermission "jar:file:${com.sun.jini.qa.harness.harnessJar}!/harness/policy/all.policy";
    permission com.sun.jini.start.SharedActivationPolicyPermission "jar:file:${com.sun.jini.qa.harness.harnessJar}!/harness/policy/policy.all";
    permission com.sun.jini.start.SharedActivationPolicyPermission "file:${com.sun.jini.qa.home}${/}harness${/}policy${/}all.policy";
};

// XXX funny install dir, but taken from old harness impl
grant codebase "file:${com.sun.jini.jsk.home}${/}lib${/}mercury_bogus.jar" {
    permission com.sun.jini.start.SharedActivationPolicyPermission "jar:file:${com.sun.jini.qa.harness.harnessJar}!/harness/policy/defaultsecuremercury.policy";
    permission com.sun.jini.start.SharedActivationPolicyPermission "jar:file:${com.sun.jini.qa.harness.harnessJar}!/harness/policy/sec-jeri-mercury.policy";
    permission com.sun.jini.start.SharedActivationPolicyPermission "jar:file:${com.sun.jini.qa.harness.harnessJar}!/harness/policy/all.policy";
    permission com.sun.jini.start.SharedActivationPolicyPermission "jar:file:${com.sun.jini.qa.harness.harnessJar}!/harness/policy/policy.all";
    permission com.sun.jini.start.SharedActivationPolicyPermission "jar:file:${com.sun.jini.qa.harness.harnessJar}!/harness/policy/defaultmercury.policy";
    permission com.sun.jini.start.SharedActivationPolicyPermission "file:${com.sun.jini.qa.home}${/}harness${/}policy${/}defaultsecuremercury.policy";
    permission com.sun.jini.start.SharedActivationPolicyPermission "file:${com.sun.jini.qa.home}${/}harness${/}policy${/}sec-jeri-mercury.policy";
    permission com.sun.jini.start.SharedActivationPolicyPermission "file:${com.sun.jini.qa.home}${/}harness${/}policy${/}all.policy";
    permission com.sun.jini.start.SharedActivationPolicyPermission "file:${com.sun.jini.qa.home}${/}harness${/}policy${/}policy.all";
    permission com.sun.jini.start.SharedActivationPolicyPermission "file:${com.sun.jini.qa.home}${/}harness${/}policy${/}defaultmercury.policy";

};

grant codebase "file:${com.sun.jini.jsk.home}${/}lib${/}mahalo.jar" {
    permission com.sun.jini.start.SharedActivationPolicyPermission "file:${com.sun.jini.test.home}${/}src${/}com${/}sun${/}jini${/}test${/}impl${/}mahalo${/}bogusMahaloImpl.policy";
    permission com.sun.jini.start.SharedActivationPolicyPermission "jar:file:${com.sun.jini.qa.harness.testJar}!/com/sun/jini/test/impl/mahalo/bogusMahaloImpl.policy";
};

grant codebase "file:${com.sun.jini.jsk.home}${/}lib${/}mercury.jar" {
    permission com.sun.jini.start.SharedActivationPolicyPermission "file:${com.sun.jini.test.home}${/}src${/}com${/}sun${/}jini${/}test${/}impl${/}mahalo${/}bogusMahaloImpl.policy";
    permission com.sun.jini.start.SharedActivationPolicyPermission "jar:file:${com.sun.jini.qa.harness.testJar}!/com/sun/jini/test/impl/mahalo/bogusMahaloImpl.policy";
};

// JDK7u21 and higher try to disallow remote codebase and proxy usage.  This grant
// un-does that.
grant {
    //Needed since JDK7u25 appears to have made the proxy inaccessible.
    permission java.lang.RuntimePermission
        "accessClassInPackage.com.sun.proxy";
};

