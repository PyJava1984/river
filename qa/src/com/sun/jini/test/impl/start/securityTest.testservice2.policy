/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

grant {
    permission java.io.FilePermission "${java.io.tmpdir}${/}testservice2", "read";
    permission java.io.FilePermission
    "${com.sun.jini.qa.harness.harnessJar}", "read";
    permission java.io.FilePermission
    "${com.sun.jini.qa.harness.testJar}", "read";
    permission java.io.FilePermission
    "${com.sun.jini.test.home}/src/com/sun/jini/test/impl/start/configs/-", "read";
    permission java.net.SocketPermission "*:1024-", "accept,resolve";
    permission java.net.SocketPermission "*:1098", "connect,resolve";
    permission java.lang.RuntimePermission "accessClassInPackage.sun.rmi.*", "";
    permission java.lang.RuntimePermission "getClassLoader";
    permission javax.security.auth.AuthPermission "createLoginContext.com.sun.jini.Fiddler";
    permission javax.security.auth.AuthPermission "doAsPrivileged";
    permission java.security.SecurityPermission "getProperty.net.jini.security.policy.PolicyFileProvider.basePolicyClass";
    permission net.jini.security.AuthenticationPermission
        "javax.security.auth.x500.X500Principal \"CN=Fiddler\"", "accept,connect,listen";
    permission net.jini.security.AuthenticationPermission
        "javax.security.auth.kerberos.KerberosPrincipal \"${fiddler}\"", "accept,connect,listen";
};

grant principal javax.security.auth.x500.X500Principal "CN=Tester"
{
      permission net.jini.security.AccessPermission "*";
};

grant principal javax.security.auth.kerberos.KerberosPrincipal "${test}"
{
      permission net.jini.security.AccessPermission "*";
};

