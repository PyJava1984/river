
#/*
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#*/

VIEW_ROOT	:= $(shell (echo $(PWD)) | sed -e 's,/vob.*,,')

SVN_BRANCH	:= $(shell (echo $(PWD)) | sed -e 's,/source.*,,'|sed -e 's,.*qatests/,,')
JTSK_ROOT	:= $(VIEW_ROOT)/../../../jtsk/$(SVN_BRANCH)

#
# Include the makefile that contains settings common to all vobs.
#

include $(VIEW_ROOT)/vob/jive/src/GNUmakefile.allvobs

# Also, we put the target here so that just typing gmake
# will build the entire tree.
#

# Classes that need to be processed by rmic to create a stub
QA.impls     = 

SERVER.class	= $(QA.impls) 

# location of keystores, etc

TRUST = $(VIEW_ROOT)/vob/qa/harness/trust

# Location of the classes related to QA Testing

JINICLASSES	= $(JTSK_ROOT)/classes
TOOLSCLASSES	= $(JTSK_ROOT)/classes
QACLASSES	= $(VIEW_ROOT)/vob/qa/classes
QAJARSDIR	= $(VIEW_ROOT)/vob/qa/lib

QA_CLASS_PATH = $(VIEW_ROOT)/vob/qa/classes/com/sun/jini/qa
TEST_CLASS_PATH = $(VIEW_ROOT)/vob/qa/classes/com/sun/jini/test
TOOLS_CLASS_PATH = $(JTSK_ROOT)/classes/com/sun/jini/tool
CORBA_CLASS_PATH = $(VIEW_ROOT)/vob/qa/classes/org

QA_CLASS_LINK = $(JTSK_ROOT)/classes/com/sun/jini/qa
TEST_CLASS_LINK = $(JTSK_ROOT)/classes/com/sun/jini/test
TOOLS_CLASS_LINK = $(JTSK_ROOT)/classes/com/sun/jini/tool
CORBA_CLASS_LINK = $(JTSK_ROOT)/classes/org

define qa.unlink
    @rm -f $(QA_CLASS_LINK)
    @rm -f $(TEST_CLASS_LINK)
    @rm -f $(CORBA_CLASS_LINK)
endef
define qa.link
    $(qa.unlink)
    @ln -s $(QA_CLASS_PATH)  $(QA_CLASS_LINK)
    @ln -s $(TEST_CLASS_PATH)  $(TEST_CLASS_LINK)
    @ln -s $(CORBA_CLASS_PATH) $(CORBA_CLASS_LINK)
endef

# Compilation flags

ifdef QA_CLASSPATH
CLASSPATH       = $(QA_CLASSPATH)
else
CLASSPATH	= $(CLASSDIR):$(JINICLASSES):$(TOOLSCLASSES)
endif

CLASSDEP	= $(CLASSDEP_EXEC) -cp $(JINICLASSES)
QACLASSDEP	= $(CLASSDEP_EXEC) -cp $(CLASSDIR):$(JINICLASSES)

##
## The QAJARS variable will be appended with other jar files
## defined within GNUmakefile.jars located within the
## implementation-specific sections of this source tree:
##

QAJARS          = jiniharness.jar jinitests.jar qa1-mainwrapper.jar

##
## Note that the "/dev/null" is necessary to prevent errors
## when including an empty list of *_INCLUDES:
##
JARS_INCLUDES	= ${JARS_INCLUDES1} $(shell find $(SRC) -name GNUmakefile.jars  -print) /dev/null
STUBS_INCLUDES	= ${STUBS_INCLUDES1} $(shell find $(SRC) -name GNUmakefile.stubs -print) /dev/null

# how to copy the files things
CP		= cp
CP.flags	= 
CP.echo		= echo $(CP) $(CP.flags)
CP.exec		= $(CP) $(CP.flags)

# ============================================================
#			Begin Targets
# ============================================================

# ------------- resource property file targets ---------------

all:

list.disabled:
	@cd $(VIEW_ROOT)/vob/qa/src; \
	grep -l 'Skip.*Verifier' `find . -name '*.td'`


# -------------- Jar file targets ----------------

ifdef JARS_INCLUDES
    include $(JARS_INCLUDES)
endif

ifdef STUBS_INCLUDES
    include $(STUBS_INCLUDES)
endif

jars: $(QAJARSDIR) $(QAJARS)

ifeq ($(PWD),$(SRC))
clean clobber clean.all clobber.all::
	-rm -f $(QAJARS:%=$(QAJARSDIR)/%)
endif

tools.jar: jartools
	@cd $(JARTOOLSDIR); $(MAKE) --no-print-directory jars

	
jinitests.jar: jartools
	rm -f $(QAJARSDIR)/$@
	@echo Creating $@
	$(qa.link)
	@cd $(JINICLASSES); \
	$(JAR) cf $(QAJARSDIR)/$@ \
	   -C $(MANIFESTDIR)/qa1 META-INF/services \
	   `$(QACLASSDEP) com/sun/jini/test/impl \
	   		  $(JSKPRIVATE.INCLUDE) \
              		  -in com.sun.jini.test \
              		  -in com.sun.jini.fiddler`
	@cd $(JINICLASSES); \
	   $(QACLASSDEP) com/sun/jini/test/spec \
	   		  $(JSKPRIVATE.INCLUDE) \
              		  -in com.sun.jini.test \
              		  -in com.sun.jini.fiddler | xargs $(JAR) uf $(QAJARSDIR)/$@; 
	@cd $(JINICLASSES); \
	$(JAR) uf $(QAJARSDIR)/$@ \
	   `$(QACLASSDEP) com/sun/jini/test/share \
			  com/sun/jini/test/support \
			  com/sun/jini/test/services/lookupsimulator/LookupSimulatorProxyInterface.class \
			  com/sun/jini/fiddler/FiddlerAdmin.class \
			  com/sun/jini/fiddler/JavaSpaceAdmin.class \
	   		  $(JSKPRIVATE.INCLUDE) \
              		  -in com.sun.jini.test \
              		  -in com.sun.jini.fiddler` \
	   `find com/sun/jini/start/resources ! -name .svn ! -type d | grep -v /.svn`
	@cd $(SRC); \
	$(JAR) uf $(QAJARSDIR)/$@ \
	   interopExclusionList.txt \
	   `find com/sun/jini/test/spec/loader/util/resources ! -name .svn ! -type d | grep -v /.svn` \
	   `find com/sun/jini/test/spec/loader/util/resources_local ! -name .svn ! -type d | grep -v /.svn` \
	   `find com/sun/jini/test ! -name '*.java' ! -name '*makefile*' ! -name .svn ! -type d | grep -v /.svn`
	$(qa.unlink)

qa1-mainwrapper.jar: jartools
	rm -f $(QAJARSDIR)/$@
	@echo Creating $@
	$(qa.link)
	cd $(JINICLASSES); $(JAR) cf $(QAJARSDIR)/$@ `$(CLASSDEP) -in com.sun.jini com.sun.jini.qa.harness.MainWrapper`
	$(qa.unlink)

jiniharness.jar: jartools
	rm -f $(QAJARSDIR)/$@
	@echo Creating $@
	$(qa.link)
	@cd $(JINICLASSES); \
	$(JAR) cf $(QAJARSDIR)/$@ \
	   `$(QACLASSDEP) com/sun/jini/qa/harness \
	   		  $(JSKPRIVATE.INCLUDE) \
			  -in com.sun.jini.start \
			  -in com.sun.jini.qa \
			  -in com.sun.jini.tool \
			  com.sun.jini.start.DestroySharedGroup` \
	   `find com/sun/jini/start/resources ! -name .svn ! -type d | grep -v /.svn`
	@cd $(VIEW_ROOT)/vob/qa; $(JAR) uf $(QAJARSDIR)/$@ `find harness ! -name .svn ! -type d | grep -v /.svn`
	@cd $(SRC); $(JAR) uf $(QAJARSDIR)/$@ `find com/sun/jini/qa/resources ! -name .svn ! -type d | grep -v /.svn`
	$(qa.unlink)

qaman.jar: jartools
	rm -f $(QAJARSDIR)/$@
	@echo Creating $@
	$(qa.link)
	@cd $(CLASSDIR); $(JAR) cfm $(QAJARSDIR)/$@ $(MANIFESTDIR)/qa1.mf com/sun/jini/qaman `$(QACLASSDEP) $(VIEW_ROOT)/vob/qa/classes/com/sun/jini/qaman com.sun.jini.qa.harness.QARunner -in com.sun.jini -show com.sun.jini.test -show com.sun.jini.qa  -show com.sun.jini.qaman`
	@cd $(SRC); $(JAR) uf $(QAJARSDIR)/$@ com/sun/jini/qa/resources
	@cd $(JINICLASSES); $(JAR) uf $(QAJARSDIR)/$@ `$(QACLASSDEP) $(VIEW_ROOT)/vob/qa/classes/com/sun/jini/qaman com.sun.jini.qa.harness.QARunner -in com.sun.jini -hide com.sun.jini.qa -hide com.sun.jini.qa  -hide com.sun.jini.qaman` com/sun/jini/start/resources
	$(qa.unlink)

JREEXTDIR = $(JAVA.home)/jre/lib/ext

install.qapolicy:
	@set -e;							    \
	rm -f $(JREEXTDIR)/mergedpolicyprovider.jar ;				    \
	echo cp $(QAJARSDIR)/mergedpolicyprovider.jar $(JREEXTDIR)/ ;		    \
	cp $(QAJARSDIR)/mergedpolicyprovider.jar $(JREEXTDIR)/mergedpolicyprovider.jar

uninstall.qapolicy:
	@set -e;							\
	echo rm -f $(JREEXTDIR)/mergedpolicyprovider.jar ;			\
	rm -f $(JREEXTDIR)/mergedpolicyprovider.jar

tools::

trust: keystores password trustst 

keystores: tester.keystore reggie.keystore phoenix.keystore mercury.keystore norm.keystore outrigger.keystore mahalo.keystore fiddler.keystore group.keystore

tester.keystore:
	@rm -f $(TRUST)/tester.keystore
	$(KEYTOOL) -keypass testerpw -storepass testerpw \
		   -keystore $(TRUST)/tester.keystore \
		   -genkey -validity 1800 -alias tester -dname CN=Tester
	$(KEYTOOL) -keypass testerpw -storepass testerpw \
		   -keystore $(TRUST)/tester.keystore \
		   -export -alias tester -file $(TRUST)/tester.cert

reggie.keystore:
	@rm -f $(TRUST)/reggie.keystore
	$(KEYTOOL) -keypass reggiepw -storepass reggiepw \
		   -keystore $(TRUST)/reggie.keystore \
		   -genkey -validity 1800 -alias reggie -dname CN=Reggie
	$(KEYTOOL) -keypass reggiepw -storepass reggiepw \
		   -keystore $(TRUST)/reggie.keystore \
		   -export -alias reggie -file $(TRUST)/reggie.cert

mercury.keystore:
	@rm -f $(TRUST)/mercury.keystore
	$(KEYTOOL) -keypass mercurypw -storepass mercurypw \
		   -keystore $(TRUST)/mercury.keystore \
		   -genkey -validity 1800 -alias mercury -dname CN=Mercury
	$(KEYTOOL) -keypass mercurypw -storepass mercurypw \
		   -keystore $(TRUST)/mercury.keystore \
		   -export -alias mercury -file $(TRUST)/mercury.cert
phoenix.keystore:
	@rm -f $(TRUST)/phoenix.keystore
	$(KEYTOOL) -keypass phoenixpw -storepass phoenixpw \
		   -keystore $(TRUST)/phoenix.keystore \
		   -genkey -validity 1800 -alias phoenix -dname CN=Phoenix
	$(KEYTOOL) -keypass phoenixpw -storepass phoenixpw \
		   -keystore $(TRUST)/phoenix.keystore \
		   -export -alias phoenix -file $(TRUST)/phoenix.cert

norm.keystore:
	@rm -f $(TRUST)/norm.keystore
	$(KEYTOOL) -keypass normpw -storepass normpw \
		   -keystore $(TRUST)/norm.keystore \
		   -genkey -validity 1800 -alias norm -dname CN=Norm
	$(KEYTOOL) -keypass normpw -storepass normpw \
		   -keystore $(TRUST)/norm.keystore \
		   -export -alias norm -file $(TRUST)/norm.cert

outrigger.keystore:
	@rm -f $(TRUST)/outrigger.keystore
	$(KEYTOOL) -keypass outriggerpw -storepass outriggerpw \
		   -keystore $(TRUST)/outrigger.keystore \
		   -genkey -validity 1800 -alias outrigger -dname CN=Outrigger
	$(KEYTOOL) -keypass outriggerpw -storepass outriggerpw \
		   -keystore $(TRUST)/outrigger.keystore \
		   -export -alias outrigger -file $(TRUST)/outrigger.cert

mahalo.keystore:
	@rm -f $(TRUST)/mahalo.keystore
	$(KEYTOOL) -keypass mahalopw -storepass mahalopw \
		   -keystore $(TRUST)/mahalo.keystore \
		   -genkey -validity 1800 -alias mahalo -dname CN=Mahalo
	$(KEYTOOL) -keypass mahalopw -storepass mahalopw \
		   -keystore $(TRUST)/mahalo.keystore \
		   -export -alias mahalo -file $(TRUST)/mahalo.cert

fiddler.keystore:
	@rm -f $(TRUST)/fiddler.keystore
	$(KEYTOOL) -keypass fiddlerpw -storepass fiddlerpw \
		   -keystore $(TRUST)/fiddler.keystore \
		   -genkey -validity 1800 -alias fiddler -dname CN=Fiddler
	$(KEYTOOL) -keypass fiddlerpw -storepass fiddlerpw \
		   -keystore $(TRUST)/fiddler.keystore \
		   -export -alias fiddler -file $(TRUST)/fiddler.cert

group.keystore:
	@rm -f $(TRUST)/group.keystore
	$(KEYTOOL) -keypass grouppw -storepass grouppw \
		   -keystore $(TRUST)/group.keystore \
		   -genkey -validity 1800 -alias group -dname CN=Group
	$(KEYTOOL) -keypass grouppw -storepass grouppw \
		   -keystore $(TRUST)/group.keystore \
		   -export -alias group -file $(TRUST)/group.cert

password: tester.password reggie.password phoenix.password mercury.password norm.password outrigger.password mahalo.password fiddler.password group.password

tester.password:
	@rm -f tester.password
	echo testerpw > $(TRUST)/tester.password

reggie.password:
	@rm -f reggie.password
	echo reggiepw > $(TRUST)/reggie.password

mercury.password:
	@rm -f mercury.password
	echo mercurypw > $(TRUST)/mercury.password

norm.password:
	@rm -f norm.password
	echo normpw > $(TRUST)/norm.password

phoenix.password:
	@rm -f phoenix.password
	echo phoenixpw > $(TRUST)/phoenix.password

outrigger.password:
	@rm -f outrigger.password
	echo outriggerpw > $(TRUST)/outrigger.password

mahalo.password:
	@rm -f mahalo.password
	echo mahalopw > $(TRUST)/mahalo.password

fiddler.password:
	@rm -f fiddler.password
	echo fiddlerpw > $(TRUST)/fiddler.password

group.password:
	@rm -f group.password
	echo grouppw > $(TRUST)/group.password


trustst: truststore

truststore:
	@rm -f $(TRUST)/truststore
	$(KEYTOOL) -keypass trustpw -storepass trustpw \
		   -keystore $(TRUST)/truststore \
		   -import -noprompt -alias tester -file $(TRUST)/tester.cert
	$(KEYTOOL) -keypass trustpw -storepass trustpw \
		   -keystore $(TRUST)/truststore \
		   -import -noprompt -alias reggie -file $(TRUST)/reggie.cert
	$(KEYTOOL) -keypass trustpw -storepass trustpw \
		   -keystore $(TRUST)/truststore \
		   -import -noprompt -alias mercury -file $(TRUST)/mercury.cert
	$(KEYTOOL) -keypass trustpw -storepass trustpw \
		   -keystore $(TRUST)/truststore \
		   -import -noprompt -alias norm -file $(TRUST)/norm.cert
	$(KEYTOOL) -keypass trustpw -storepass trustpw \
		   -keystore $(TRUST)/truststore \
		   -import -noprompt -alias phoenix -file $(TRUST)/phoenix.cert
	$(KEYTOOL) -keypass trustpw -storepass trustpw \
		   -keystore $(TRUST)/truststore \
		   -import -noprompt -alias outrigger -file $(TRUST)/outrigger.cert
	$(KEYTOOL) -keypass trustpw -storepass trustpw \
		   -keystore $(TRUST)/truststore \
		   -import -noprompt -alias mahalo -file $(TRUST)/mahalo.cert
	$(KEYTOOL) -keypass trustpw -storepass trustpw \
		   -keystore $(TRUST)/truststore \
		   -import -noprompt -alias fiddler -file $(TRUST)/fiddler.cert
	$(KEYTOOL) -keypass trustpw -storepass trustpw \
		   -keystore $(TRUST)/truststore \
		   -import -noprompt -alias group -file $(TRUST)/group.cert

checkconfigs:
	@find $(VIEW_ROOT)/vob/qa -name '*.config' -exec $(JAVA) -cp $(TOOLSCLASSES):$(JINICLASSES):$(VIEW_ROOT)/vob/qa/classes com.sun.jini.tool.CheckConfigurationFile {} \;

############################
#
# END QA INCLUDE FILE
#
############################
