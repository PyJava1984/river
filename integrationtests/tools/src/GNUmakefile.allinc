
#/*
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#*/

##
## Include the makefile that contains settings common to all vobs.
##

include $(VIEW_ROOT)/vob/jive/src/GNUmakefile.allvobs

##
## Note that the "/dev/null" is necessary to prevent errors
## when including an empty list of *_INCLUDES:
##

JARS_INCLUDES	= $(shell find $(SRC) -name GNUmakefile.jars  -print) /dev/null
STUBS_INCLUDES	= $(shell find $(SRC) -name GNUmakefile.stubs -print) /dev/null

ifdef JARS_INCLUDES
    include $(JARS_INCLUDES)
endif

ifdef STUBS_INCLUDES
    include $(STUBS_INCLUDES)
endif

SERVER.class =

JINI_CLASSES = $(VIEW_ROOT)/vob/jive/classes

CLASSDEP = $(CLASSDEP_EXEC) -cp $(CLASSDIR):$(JINI_CLASSES):$(JAVA.tools)
PREFERREDLISTGEN = $(JAVA) -cp $(TOOLSCLASSES):$(JAVA.tools) com.sun.jini.tool.PreferredListGen


#can't build toolwrappers with this target, because jsk-platform.jar may not exist yet
jars: $(JARSDIR) tools.jar

toolwrappers: checkconfigurationfile.jar checkser.jar      \
	classdep.jar classserver.jar computedigest.jar                   \
	computehttpmdcodebase.jar jsk-debug-policy.jar \
	jarwrapper.jar  preferredlistgen.jar \
	envcheck.jar

tools.jar:
	rm -f $(JARSDIR)/$@
	@echo Creating $@
	cd $(CLASSDIR); $(JAR) cfm $(JARSDIR)/$@ $(MANIFESTDIR)/tools.mf \
		-C $(MANIFESTDIR)/tools META-INF/services/com.sun.jini.tool.envcheck.Plugin \
		`$(CLASSDEP) $(JSKPRIVATE.INCLUDE)		\
			-in com.sun.jini.tool 			\
			com.sun.jini.tool.CheckConfigurationFile\
			com.sun.jini.tool.CheckSer		\
			com.sun.jini.tool.ClassDep		\
			com.sun.jini.tool.ClassDepLoader        \
			com.sun.jini.tool.ClassServer		\
			com.sun.jini.tool.ComputeDigest		\
			com.sun.jini.tool.ComputeHttpmdCodebase	\
			com.sun.jini.tool.JarWrapper		\
			com.sun.jini.tool.PreferredListGen      \
			com.sun.jini.tool.envcheck.AbstractPlugin \
			com.sun.jini.tool.envcheck.EnvCheck     \
			com.sun.jini.tool.envcheck.SubVM        \
			com.sun.jini.tool.envcheck.plugins.CheckActivationSystem \
			com.sun.jini.tool.envcheck.plugins.CheckCodebase \
			com.sun.jini.tool.envcheck.plugins.CheckConfig \
			com.sun.jini.tool.envcheck.plugins.CheckJDK1_4 \
			com.sun.jini.tool.envcheck.plugins.CheckJSKPlatform \
			com.sun.jini.tool.envcheck.plugins.CheckJSKPolicy \
			com.sun.jini.tool.envcheck.plugins.CheckJsseProps \
			com.sun.jini.tool.envcheck.plugins.CheckLoggingConfig \
			com.sun.jini.tool.envcheck.plugins.CheckNoLoopback \
			com.sun.jini.tool.envcheck.plugins.CheckPersistence \
			com.sun.jini.tool.envcheck.plugins.CheckPolicy \
			com.sun.jini.tool.envcheck.plugins.FileAccessCheckTask` \
			com/sun/jini/tool/resources \
			com/sun/jini/tool/envcheck/resources \
			com/sun/jini/tool/envcheck/plugins/resources
	cd $(JINI_CLASSES); $(JAR) uf $(JARSDIR)/$@ \
		`$(CLASSDEP) $(JSKPRIVATE.INCLUDE)		\
			-in com.sun.jini.tool 			\
			-in com.sun.jini.start 			\
			-hide com.sun.jini.tool			\
			com.sun.jini.tool.CheckConfigurationFile\
			com.sun.jini.tool.CheckSer		\
			com.sun.jini.tool.ClassDep		\
			com.sun.jini.tool.ClassDepLoader        \
			com.sun.jini.tool.ClassServer		\
			com.sun.jini.tool.ComputeDigest		\
			com.sun.jini.tool.ComputeHttpmdCodebase	\
			com.sun.jini.tool.JarWrapper		\
			com.sun.jini.tool.PreferredListGen      \
			com.sun.jini.tool.envcheck.AbstractPlugin \
			com.sun.jini.tool.envcheck.EnvCheck     \
			com.sun.jini.tool.envcheck.SubVM        \
			com.sun.jini.tool.envcheck.plugins.CheckActivationSystem \
			com.sun.jini.tool.envcheck.plugins.CheckCodebase \
			com.sun.jini.tool.envcheck.plugins.CheckConfig \
			com.sun.jini.tool.envcheck.plugins.CheckJDK1_4 \
			com.sun.jini.tool.envcheck.plugins.CheckJSKPlatform \
			com.sun.jini.tool.envcheck.plugins.CheckJSKPolicy \
			com.sun.jini.tool.envcheck.plugins.CheckJsseProps \
			com.sun.jini.tool.envcheck.plugins.CheckLoggingConfig \
			com.sun.jini.tool.envcheck.plugins.CheckNoLoopback \
			com.sun.jini.tool.envcheck.plugins.CheckPersistence \
			com.sun.jini.tool.envcheck.plugins.CheckPolicy \
			com.sun.jini.tool.envcheck.plugins.FileAccessCheckTask` 
	$(PREFERREDLISTGEN) -jar $(JARSDIR)/$@ -cp $(CLASSDIR)  


checkconfigurationfile.jar:
	rm -f $(JARSDIR)/$@
	@echo Creating $@
	@$(JAVA) -cp $(CLASSDIR) com.sun.jini.tool.JarWrapper \
		-manifest=$(MANIFESTDIR)/checkconfigurationfile.mf \
		$(JARSDIR)/$@ $(JARSDIR) tools.jar

checkser.jar:
	rm -f $(JARSDIR)/$@
	@echo Creating $@
	@$(JAVA) -cp $(CLASSDIR) com.sun.jini.tool.JarWrapper \
		-manifest=$(MANIFESTDIR)/checkser.mf $(JARSDIR)/$@ \
		$(JARSDIR) tools.jar

classdep.jar:
	rm -f $(JARSDIR)/$@
	@echo Creating $@
	@$(JAVA) -cp $(CLASSDIR) com.sun.jini.tool.JarWrapper \
		-manifest=$(MANIFESTDIR)/classdep.mf \
		$(JARSDIR)/$@ $(JARSDIR) tools.jar

# extracts the tools.jar manifest entry for Main-Class
classserver.jar:
	rm -f $(JARSDIR)/$@
	@echo Creating $@
	@$(JAVA) -cp $(CLASSDIR) com.sun.jini.tool.JarWrapper \
		$(JARSDIR)/$@ $(JARSDIR) tools.jar

computedigest.jar:
	rm -f $(JARSDIR)/$@
	@echo Creating $@
	@$(JAVA) -cp $(CLASSDIR) com.sun.jini.tool.JarWrapper \
		-manifest=$(MANIFESTDIR)/computedigest.mf \
		$(JARSDIR)/$@ $(JARSDIR) tools.jar

computehttpmdcodebase.jar:
	rm -f $(JARSDIR)/$@
	@echo Creating $@
	@$(JAVA) -cp $(CLASSDIR) com.sun.jini.tool.JarWrapper \
		-manifest=$(MANIFESTDIR)/computehttpmdcodebase.mf \
		$(JARSDIR)/$@ $(JARSDIR) tools.jar

jsk-debug-policy.jar:
	rm -f $(JARSDIR)/$@
	@echo Creating $@
	@cd $(CLASSDIR); $(JAR) cfm $(JARSDIR)/$@ \
		$(MANIFESTDIR)/jsk-debug-policy.mf \
		`$(CLASSDEP) $(JSKPRIVATE.INCLUDE) \
			-in com.sun.jini.tool 			\
			com.sun.jini.tool.DebugDynamicPolicyProvider`

jarwrapper.jar:
	rm -f $(JARSDIR)/$@
	@echo Creating $@
	@$(JAVA) -cp $(CLASSDIR) com.sun.jini.tool.JarWrapper \
		-manifest=$(MANIFESTDIR)/jarwrapper.mf \
		$(JARSDIR)/$@ $(JARSDIR) tools.jar

preferredlistgen.jar:
	rm -f $(JARSDIR)/$@
	@echo Creating $@
	@$(JAVA) -cp $(CLASSDIR) com.sun.jini.tool.JarWrapper \
		-manifest=$(MANIFESTDIR)/preferredlistgen.mf \
		$(JARSDIR)/$@ $(JARSDIR) tools.jar

envcheck.jar:
	rm -f $(JARSDIR)/$@
	@echo Creating $@
	@$(JAVA) -cp $(CLASSDIR) com.sun.jini.tool.JarWrapper \
		-manifest=$(MANIFESTDIR)/envcheck.mf \
		$(JARSDIR)/$@ $(JARSDIR) tools.jar
	@$(JAR) -uf $(JARSDIR)/$@ -C $(MANIFESTDIR)/tools META-INF/services/com.sun.jini.tool.envcheck.Plugin
